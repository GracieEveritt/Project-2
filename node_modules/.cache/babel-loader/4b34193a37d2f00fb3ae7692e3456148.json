{"ast":null,"code":"var _jsxFileName = \"/Users/gracieeveritt/Documents/seir224/unit02/project/Project-2/src/Body/Chart.js\";\nimport React from 'react';\nimport { HorizontalBar, defaults } from 'react-chartjs-2';\nimport Media from 'react-media';\nimport './Chart.css';\ndefaults.global.defaultFontFamily = \"Montserrat\";\ndefaults.global.defaultFontColor = \"white\";\ndefaults.global.defaultFontWeight = \"500\";\n\nfunction Chart(props) {\n  const chartData = {\n    labels: ['Cases', 'Recvrd', \"Deaths\"],\n    //x axis\n    datasets: [{\n      // labels: 'Population',\n      data: [props.totalCases, props.totalRecoveries, props.totalDeaths],\n      //y-axis\n      backgroundColor: ['#37A9E9', '#7ED72D', '#E969F1'],\n      hoverBackgroundColor: ['#892F99', '#892F99', '#892F99']\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Media, {\n    queries: {\n      small: \"(max-width: 767px)\",\n      medium: \"(min-width: 768px) and (max-width: 1023px)\",\n      large: \"(min-width: 1024px)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, matches => /*#__PURE__*/React.createElement(React.Fragment, null, matches.small && /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: chartData,\n    height: 150,\n    options: {\n      mainAspectRation: false,\n      legend: {\n        labels: {\n          fontColor: \"white\"\n        }\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 12,\n            fontweight: \"500\"\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            offset: false,\n            fontColor: \"white\",\n            fontSize: 10,\n            fontweight: \"500\",\n            beginAtZero: false\n          }\n        }]\n      },\n      legend: {\n        display: false\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 35\n    }\n  }), matches.medium && /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: chartData,\n    height: 75,\n    options: {\n      mainAspectRation: false,\n      legend: {\n        labels: {\n          fontColor: \"white\"\n        }\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 12,\n            fontweight: \"500\"\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            offset: false,\n            fontColor: \"white\",\n            fontSize: 10,\n            fontweight: \"500\",\n            beginAtZero: false\n          }\n        }]\n      },\n      legend: {\n        display: false\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 36\n    }\n  }), matches.large && /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: chartData,\n    height: 45,\n    options: {\n      mainAspectRation: false,\n      legend: {\n        labels: {\n          fontColor: \"white\"\n        }\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            fontColor: \"white\",\n            fontSize: 16,\n            fontweight: \"500\"\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            offset: false,\n            fontColor: \"white\",\n            fontSize: 16,\n            fontweight: \"500\",\n            beginAtZero: false\n          }\n        }]\n      },\n      legend: {\n        display: false\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 35\n    }\n  }))));\n}\n\nexport default Chart;","map":{"version":3,"sources":["/Users/gracieeveritt/Documents/seir224/unit02/project/Project-2/src/Body/Chart.js"],"names":["React","HorizontalBar","defaults","Media","global","defaultFontFamily","defaultFontColor","defaultFontWeight","Chart","props","chartData","labels","datasets","data","totalCases","totalRecoveries","totalDeaths","backgroundColor","hoverBackgroundColor","small","medium","large","matches","mainAspectRation","legend","fontColor","scales","yAxes","ticks","fontSize","fontweight","xAxes","offset","beginAtZero","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {HorizontalBar, defaults} from 'react-chartjs-2'\nimport Media from 'react-media'\nimport './Chart.css'\n\ndefaults.global.defaultFontFamily = \"Montserrat\"\ndefaults.global.defaultFontColor = \"white\"\ndefaults.global.defaultFontWeight = \"500\"\n\nfunction Chart(props) {\n    \n    const chartData = {\n        labels: ['Cases', 'Recvrd', \"Deaths\"], //x axis\n        datasets: [{\n            // labels: 'Population',\n            data: [props.totalCases,props.totalRecoveries,props.totalDeaths], //y-axis\n           \n            backgroundColor: ['#37A9E9', '#7ED72D', '#E969F1'],\n            hoverBackgroundColor: ['#892F99','#892F99','#892F99' ]\n        }]\n    }\n  \n    return (\n    <div className=\"Chart\">\n         <Media queries={{\n          small: \"(max-width: 767px)\",\n          medium: \"(min-width: 768px) and (max-width: 1023px)\",\n          large: \"(min-width: 1024px)\"\n        }}>\n          {matches => (\n              <>\n                {matches.small && <HorizontalBar \n            data={chartData}\n            height={150}\n            options={{\n                mainAspectRation: false,\n                legend:{\n                    labels: {\n                        fontColor: \"white\",\n                    }\n                },\n                scales:{\n                    yAxes: [{\n                        ticks: {\n                            fontColor: \"white\",\n                            fontSize: 12,\n                            fontweight: \"500\"\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            offset: false,\n                            fontColor: \"white\",\n                            fontSize: 10,\n                            fontweight: \"500\",\n                            beginAtZero: false,\n                        }\n                    }]\n                },\n                legend: {\n                    display: false\n                }\n            }}\n        />}\n                {matches.medium && <HorizontalBar \n            data={chartData}\n            height={75}\n            options={{\n                mainAspectRation: false,\n                legend:{\n                    labels: {\n                        fontColor: \"white\",\n                    }\n                },\n                scales:{\n                    yAxes: [{\n                        ticks: {\n                            fontColor: \"white\",\n                            fontSize: 12,\n                            fontweight: \"500\"\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            offset: false,\n                            fontColor: \"white\",\n                            fontSize: 10,\n                            fontweight: \"500\",\n                            beginAtZero: false,\n                        }\n                    }]\n                },\n                legend: {\n                    display: false\n                }\n            }}\n        />}\n                {matches.large && <HorizontalBar \n            data={chartData}\n            height={45}\n            options={{\n                mainAspectRation: false,\n                legend:{\n                    labels: {\n                        fontColor: \"white\",\n                    }\n                },\n                scales:{\n                    yAxes: [{\n                        ticks: {\n                            fontColor: \"white\",\n                            fontSize: 16,\n                            fontweight: \"500\"\n                        }\n                    }],\n                    xAxes: [{\n                        ticks: {\n                            offset: false,\n                            fontColor: \"white\",\n                            fontSize: 16,\n                            fontweight: \"500\",\n                            beginAtZero: false,\n                        }\n                    }]\n                },\n                legend: {\n                    display: false\n                }\n            }}\n        />}\n\n\n\n\n            </>\n          )}\n          </Media>\n    </div>\n  );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}