{"ast":null,"code":"var _jsxFileName = \"/Users/gracieeveritt/Documents/seir224/unit02/project/Project-2/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Body/Header';\nimport Main from './Body/Main';\nimport Footer from './Body/Footer';\nimport SideDrawer from './Body/SideDrawer';\nimport Backdrop from './Body/Backdrop'; //This import is necessary if API is down\n// import testData from './testData'\n\nexport const CovidDataContext = React.createContext();\n\nfunction App() {\n  const [covidUSData, setCovidUSData] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(\"\");\n  const [isLoading, setisLoading] = useState(true);\n  const [sideDrawerOpen, setDrawer] = useState(false); //Use This if the API is Down\n  // const [covidUSData, setCovidUSData] = useState(testData);\n  // const [isLoading, setisLoading] = useState(false);\n  //Comment out the useEffect if API is down\n\n  useEffect(() => {\n    const makeApiCall = async () => {\n      const res = await fetch(\"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats?country=US\", {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"6aebfd9cf1mshf5ff7c3037601f8p1d234bjsndbb38607cd6d\"\n        }\n      });\n      const json = await res.json();\n      console.log('API-Data', json);\n      setCovidUSData(json.data.covid19Stats);\n      setLastUpdated(json.data.lastChecked);\n      setisLoading(false);\n    };\n\n    makeApiCall();\n  }, []); //The following creates animation for the Hamburger Menu\n\n  const drawerToggleClickHandler = prevState => {\n    setDrawer(prevState => {\n      return setDrawer(!prevState.sideDrawerOpen);\n    });\n  };\n\n  const backdropClickHandler = () => {\n    setDrawer(false);\n  };\n\n  let backdrop;\n\n  if (sideDrawerOpen) {\n    backdrop = /*#__PURE__*/React.createElement(Backdrop, {\n      click: backdropClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    lastUpdated: lastUpdated,\n    drawerClickHandler: drawerToggleClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SideDrawer, {\n    show: sideDrawerOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), backdrop, /*#__PURE__*/React.createElement(CovidDataContext.Provider, {\n    value: covidUSData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, !isLoading ? /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 36\n    }\n  }, \"API is Fetching ...\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gracieeveritt/Documents/seir224/unit02/project/Project-2/src/App.js"],"names":["React","useState","useEffect","Header","Main","Footer","SideDrawer","Backdrop","CovidDataContext","createContext","App","covidUSData","setCovidUSData","lastUpdated","setLastUpdated","isLoading","setisLoading","sideDrawerOpen","setDrawer","makeApiCall","res","fetch","method","headers","json","console","log","data","covid19Stats","lastChecked","drawerToggleClickHandler","prevState","backdropClickHandler","backdrop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './Body/Header'\nimport Main from './Body/Main'\nimport Footer from './Body/Footer'\nimport SideDrawer from './Body/SideDrawer'\nimport Backdrop from './Body/Backdrop'\n//This import is necessary if API is down\n// import testData from './testData'\n\nexport const CovidDataContext = React.createContext()\n  \nfunction App() {\n  const [covidUSData, setCovidUSData] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(\"\");\n  const [isLoading, setisLoading] = useState(true);\n  const [sideDrawerOpen, setDrawer] = useState(false)\n\n  //Use This if the API is Down\n  // const [covidUSData, setCovidUSData] = useState(testData);\n  // const [isLoading, setisLoading] = useState(false);\n\n  //Comment out the useEffect if API is down\n  useEffect(() => {\n    const makeApiCall = async () => {\n      const res = await fetch(\n        \"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats?country=US\",\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n            \"x-rapidapi-key\":\n              \"6aebfd9cf1mshf5ff7c3037601f8p1d234bjsndbb38607cd6d\"\n          }\n        }\n      );\n      const json = await res.json();\n      console.log('API-Data', json)\n      setCovidUSData(json.data.covid19Stats);\n      setLastUpdated(json.data.lastChecked);\n      setisLoading(false);\n    };\n    makeApiCall()\n  }, []);\n  \n  //The following creates animation for the Hamburger Menu\n  const drawerToggleClickHandler = (prevState)=>{\n    setDrawer((prevState)=>{return (setDrawer(!prevState.sideDrawerOpen))})\n  }\n  const backdropClickHandler = () => {\n    setDrawer(false)\n  }\n  let backdrop;\n  if(sideDrawerOpen){\n    backdrop =  <Backdrop click={backdropClickHandler}/>\n  }\n\n  return (\n    <div className=\"App\">\n        {/* Comment out first header - and use second, if API is out */}\n        <Header lastUpdated={lastUpdated} drawerClickHandler={drawerToggleClickHandler} />\n        {/* <Header drawerClickHandler={drawerToggleClickHandler} /> */}\n        <SideDrawer show={sideDrawerOpen}/>\n        {backdrop}\n        <CovidDataContext.Provider value={covidUSData}>\n          {!isLoading ? <Main /> : <p className=\"Loading\">API is Fetching ...</p>}\n        </CovidDataContext.Provider>\n        <Footer />\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}