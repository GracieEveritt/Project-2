{"ast":null,"code":"var _jsxFileName = \"/Users/gracieeveritt/Documents/seir224/unit02/project/Project-2/src/Maps/USMap.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport USAMap from 'react-usa-map';\nimport { CovidDataContext } from '../App';\nimport stateIndex from './stateIndex';\nimport functionStateData from './StateData';\nimport './USMap.css';\n\nfunction USMap() {\n  const covidDataImport = useContext(CovidDataContext);\n  const [stateSelected, setStateSelected] = useState(\"CO\");\n  const [summaryMapData, setSummaryMapData] = useState([]);\n  const [viewSelected, setViewSelected] = useState(\"confirmed\"); //This function bridges API data with Map; compiles API data by State; calculates further analysis by State \n\n  useEffect(() => {\n    let summaryByState = functionStateData(stateIndex, covidDataImport);\n    setSummaryMapData(summaryByState);\n  }, []); //This is visible so you can see the data in console log\n\n  console.log('MyStateSummaries', summaryMapData); //This function returns which State user clicked on the Map \n\n  let mapHandler = event => {\n    let stateClicked = event.target.dataset.name;\n    setStateSelected(stateClicked);\n  }; //This filters summaryMapData down to state selected by user\n\n\n  const stateToDisplay = summaryMapData.filter((state, index) => {\n    return state.stateAbbrev === stateSelected;\n  }); //This function provides the Map what color to fill each by state\n\n  const statesCustomConfig = () => {\n    let obj = {};\n    summaryMapData.map(state => {\n      let stateData = {\n        fill: state[`${viewSelected}Fill`]\n      };\n      obj[state.stateAbbrev] = stateData;\n      return obj;\n    });\n    return obj;\n  }; //This function determines which Map view user wants to see\n\n\n  const handleButtonClick = view => {\n    setViewSelected(view);\n  }; //This condition prevents the Component's Return from erroring when it attempts to return data from empty summaryMapData\n\n\n  if (summaryMapData.length < 1) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 40\n      }\n    }, \"Is Loading....\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"USMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Map-Buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Map-Button Map-Cases-Button\",\n    onClick: () => handleButtonClick('confirmed'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }, \"Cases\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Map-Button Map-Recoveries-Button\",\n    onClick: () => handleButtonClick('recovered'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }\n  }, \"Recoveries\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Map-Button Map-Deaths-Button\",\n    onClick: () => handleButtonClick('death'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }\n  }, \"Deaths\")), /*#__PURE__*/React.createElement(USAMap, {\n    customize: statesCustomConfig(),\n    onClick: mapHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Map-State-Box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Map-State-Box-Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"State: \\xA0 \", stateToDisplay[0].stateName), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, stateToDisplay[0].confirmedStatus), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, stateToDisplay[0].deathStatus, \" Fatalities\")), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"Rate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"Percent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"% US Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"Rank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"US Ranking\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Cases:\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, stateToDisplay[0].confirmed), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Rate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Percent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \" 2.0%\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Rank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"#5\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"Recoveries:\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, stateToDisplay[0].recovered), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Rate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, stateToDisplay[0].recoveryRate, \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Percent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"2.0%\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Rank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"#4\")), /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"Deaths\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Deaths:\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, stateToDisplay[0].deaths), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Rate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \" \", stateToDisplay[0].deathRate, \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Percent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"2.0%\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"Rank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"#3\"))))));\n}\n\nexport default USMap;","map":{"version":3,"sources":["/Users/gracieeveritt/Documents/seir224/unit02/project/Project-2/src/Maps/USMap.js"],"names":["React","useContext","useState","useEffect","USAMap","CovidDataContext","stateIndex","functionStateData","USMap","covidDataImport","stateSelected","setStateSelected","summaryMapData","setSummaryMapData","viewSelected","setViewSelected","summaryByState","console","log","mapHandler","event","stateClicked","target","dataset","name","stateToDisplay","filter","state","index","stateAbbrev","statesCustomConfig","obj","map","stateData","fill","handleButtonClick","view","length","stateName","confirmedStatus","deathStatus","confirmed","recovered","recoveryRate","deaths","deathRate"],"mappings":"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","sourcesContent":["import React, {useContext,useState, useEffect} from 'react'\nimport USAMap from 'react-usa-map'\nimport {CovidDataContext} from '../App'\nimport stateIndex from './stateIndex'\nimport functionStateData from './StateData'\nimport './USMap.css'\n\n\nfunction USMap () {\n   const covidDataImport = useContext(CovidDataContext)\n   const [stateSelected, setStateSelected]= useState(\"CO\")\n   const [summaryMapData, setSummaryMapData] = useState([])\n   const [viewSelected, setViewSelected] = useState(\"confirmed\")\n\n    //This function bridges API data with Map; compiles API data by State; calculates further analysis by State \n    useEffect(() => {\n        let summaryByState = functionStateData(stateIndex,covidDataImport)\n        setSummaryMapData(summaryByState)\n    }, []);\n  \n    //This is visible so you can see the data in console log\n    console.log('MyStateSummaries', summaryMapData)\n\n    //This function returns which State user clicked on the Map \n    let mapHandler = (event) => {\n        let stateClicked = event.target.dataset.name\n        setStateSelected(stateClicked)\n    }\n\n    //This filters summaryMapData down to state selected by user\n    const stateToDisplay = summaryMapData.filter((state, index) =>{\n        return state.stateAbbrev === stateSelected;\n    })\n    \n    //This function provides the Map what color to fill each by state\n    const statesCustomConfig = () =>{\n        let obj = {}\n        summaryMapData.map((state) => {\n            let stateData = {fill : state[`${viewSelected}Fill`]} \n            obj[state.stateAbbrev] = stateData\n            return obj\n        })\n        return obj\n    }\n   \n    //This function determines which Map view user wants to see\n    const handleButtonClick = (view) => {\n        setViewSelected(view)\n    }\n\n    //This condition prevents the Component's Return from erroring when it attempts to return data from empty summaryMapData\n    if(summaryMapData.length<1){return(<div>Is Loading....</div>)}\n\n    return (\n        \n       <div className=\"USMap\">\n           <div className=\"Map-Buttons\">\n               <button className=\"Map-Button Map-Cases-Button\" onClick={()=>handleButtonClick('confirmed')}>Cases</button>\n               <button className=\"Map-Button Map-Recoveries-Button\" onClick={()=>handleButtonClick('recovered')}>Recoveries</button>\n               <button className=\"Map-Button Map-Deaths-Button\" onClick={()=>handleButtonClick('death')}>Deaths</button>\n           </div>\n           <USAMap customize={statesCustomConfig()} onClick={mapHandler} />\n           <div className=\"Map-State-Box\"> \n                <div className=\"Map-State-Box-Header\">\n                <h1>State: &nbsp; {stateToDisplay[0].stateName}</h1>\n                <div>{stateToDisplay[0].confirmedStatus}</div>\n                <div>{stateToDisplay[0].deathStatus} Fatalities</div>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th className=\"Total\">Total</th>\n                            <th className=\"Rate\">Rate</th>\n                            <th className=\"Percent\">% US Total</th>\n                            <th className=\"Rank\">US Ranking</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Cases:</td>\n                            <td className=\"Total\">{stateToDisplay[0].confirmed}</td>\n                            <td className=\"Rate\"></td>\n                            <td className=\"Percent\"> 2.0%</td>\n                            <td className=\"Rank\">#5</td>\n                        </tr>\n                        <tr>\n                            <td>Recoveries:</td>\n                            <td className=\"Total\">{stateToDisplay[0].recovered}</td>\n                            <td className=\"Rate\">{stateToDisplay[0].recoveryRate}%</td>\n                            <td className=\"Percent\">2.0%</td>\n                            <td className=\"Rank\">#4</td>\n                        </tr>\n                        <tr className=\"Deaths\">\n                            <td>Deaths:</td>\n                            <td className=\"Total\">{stateToDisplay[0].deaths}</td>\n                            <td className=\"Rate\"> {stateToDisplay[0].deathRate}%</td>\n                            <td className=\"Percent\">2.0%</td>\n                            <td className=\"Rank\">#3</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n       </div>\n    )\n}\n\nexport default USMap"]},"metadata":{},"sourceType":"module"}